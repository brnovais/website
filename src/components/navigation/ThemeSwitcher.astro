---
import MoonIcon from '@components/icons/heroicons/MoonIcon.astro';
import SunIcon from '@components/icons/heroicons/SunIcon.astro';
---

<theme-switcher>
  <SunIcon className="inline hidden size-6" />
  <MoonIcon className="inline hidden size-6" />
</theme-switcher>

<script>
  const LOCAL_STORAGE_KEY: string = 'theme';

  class ThemeSwitcher extends HTMLElement {
    private isDark: boolean = false;

    constructor() {
      super();

      this.load();
    }

    connectedCallback(): void {
      this.update();

      window.addEventListener('storage', this, false);
      this.addEventListener('click', this.onClick);
    }

    disconnectedCallback(): void {
      this.removeEventListener('click', this.onClick);
      window.removeEventListener('storage', this);
    }

    onClick(event: MouseEvent): void {
      this.toggle();
    }

    handleEvent(storageEvent: StorageEvent): void {
      if (storageEvent.key === LOCAL_STORAGE_KEY) {
        this.load();
        this.update();
      }
    }

    save(): void {
      let theme: string;

      if (this.isDark) {
        theme = 'dark';
      } else {
        theme = 'light';
      }

      localStorage.setItem(LOCAL_STORAGE_KEY, theme);
    }

    clear(): void {
      localStorage.removeItem(LOCAL_STORAGE_KEY);
    }

    load(): void {
      let theme: string | null = localStorage.getItem(LOCAL_STORAGE_KEY);

      if (
        theme === 'dark' ||
        (!theme && window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        this.isDark = true;
      } else {
        this.isDark = false;
      }
    }

    update(): void {
      if (this.isDark) {
        document.documentElement.classList.add('dark');

        this.children[0].classList.remove('hidden');
        this.children[1].classList.add('hidden');
      } else {
        document.documentElement.classList.remove('dark');

        this.children[0].classList.add('hidden');
        this.children[1].classList.remove('hidden');
      }
    }

    toggle(): void {
      this.isDark = !this.isDark;
      this.update();
      this.save();
    }
  }

  customElements.define('theme-switcher', ThemeSwitcher);
</script>
